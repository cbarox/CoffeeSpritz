// Generated by CoffeeScript 1.7.1
(function() {
  var spritz;

  this.Spritz = (function() {
    Spritz.prototype.getSelectionText = function() {
      var container, i, selection, text, _i, _ref;
      text = "";
      if (window.getSelection) {
        selection = window.getSelection();
        if (selection.rangeCount) {
          container = document.createElement("div");
          for (i = _i = 0, _ref = selection.rangeCount - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
            container.appendChild(selection.getRangeAt(i).cloneContents());
          }
          text = container.innerText || container.textContent;
        }
      } else if (document.selection) {
        if (document.selection.type === "Text") {
          text = document.selection.createRange().text;
        }
      }
      if (text === "") {
        return false;
      } else {
        return text;
      }
    };

    function Spritz() {
      var wpm, wpmOption, _i;
      this.rootDiv = document.createElement("div");
      this.rootDiv.id = "spritz_root";
      this.rootDiv.align = "center";
      this.rootDiv.style.position = "fixed";
      this.rootDiv.style.zIndex = "999";
      this.rootDiv.style.width = "400px";
      this.rootDiv.style.left = "50%";
      this.rootDiv.style.marginLeft = "-200px";
      this.rootDiv.style.backgroundColor = "white";
      this.rootDiv.style.borderColor = "black";
      this.rootDiv.style.borderStyle = "solid";
      this.wordDiv = this.addUiElement("div", "spritz_word", this.rootDiv);
      this.formerSpan = this.addUiElement("span", "spritz_former", this.wordDiv);
      this.formerSpan.style.fontSize = "32px";
      this.formerSpan.style.fontFamily = "Droid Sans Mono";
      this.pivotSpan = this.addUiElement("span", "spritz_pivot", this.wordDiv);
      this.pivotSpan.style.fontSize = "32px";
      this.pivotSpan.style.fontFamily = "Droid Sans Mono";
      this.pivotSpan.style.color = "red";
      this.latterSpan = this.addUiElement("span", "spritz_latter", this.wordDiv);
      this.latterSpan.style.fontSize = "32px";
      this.latterSpan.style.fontFamily = "Droid Sans Mono";
      this.controlsDiv = this.addUiElement("div", "spritz_controls", this.rootDiv);
      this.wpmSelectLabel = this.addUiElement("label", "spritz_wpmlabel", this.controlsDiv);
      this.wpmSelectLabel.innerHTML = "WPM:";
      this.wpmSelect = this.addUiElement("select", "spritz_wpm", this.controlsDiv);
      for (wpm = _i = 200; _i <= 1000; wpm = _i += 50) {
        wpmOption = document.createElement("option");
        wpmOption.text = wpm;
        this.wpmSelect.add(wpmOption);
      }
      this.wpmSelect.removeAttribute("style");
      this.startButton = this.addUiElement("button", "spritz_start", this.controlsDiv);
      this.startButton.onclick = function() {
        return spritz.go();
      };
      this.startButton.innerHTML = "Start";
      this.startButton.removeAttribute("style");
      this.closeButton = this.addUiElement("button", "spritz_close", this.controlsDiv);
      this.closeButton.onclick = function() {
        return spritz.hide();
      };
      this.closeButton.innerHTML = "Close";
      this.closeButton.removeAttribute("style");
      this.running = false;
    }

    Spritz.prototype.addUiElement = function(type, id, parent) {
      var element;
      element = document.createElement(type);
      element.id = id;
      parent.appendChild(element);
      return element;
    };

    Spritz.prototype.show = function() {
      if (document.body.firstChild) {
        return document.body.insertBefore(this.rootDiv, document.body.firstChild);
      } else {
        return document.body.appendChild(this.rootDiv);
      }
    };

    Spritz.prototype.hide = function() {
      return document.body.removeChild(this.rootDiv);
    };

    Spritz.prototype.getWPM = function() {
      var selectedIndex, wpm;
      selectedIndex = this.wpmSelect.selectedIndex;
      wpm = this.wpmSelect.options[selectedIndex].text;
      return parseInt(wpm);
    };

    Spritz.prototype.setWord = function(word) {
      var former, latter, pivot, pivotIndex;
      pivotIndex = 0;
      if (word.length > 1) {
        pivotIndex = word.length / 2 - 1;
      }
      pivot = word.charAt(pivotIndex);
      this.pivotSpan.innerHTML = pivot;
      latter = "";
      if (word.length > 1) {
        latter = word.slice(pivotIndex + 1, word.length);
      }
      former = "";
      if (word.length > 2) {
        former = word.slice(0, pivotIndex);
      }
      while (former.length > latter.length) {
        latter += "\u00A0";
      }
      while (latter.length > former.length) {
        former = "\u00A0" + former;
      }
      this.formerSpan.innerHTML = former;
      return this.latterSpan.innerHTML = latter;
    };

    Spritz.prototype.go = function() {
      var callback, currentWordIndex, intervalId, selection, waiting, words, wpm;
      selection = this.getSelectionText();
      if (!selection || selection.length === 0) {
        alert("Please select text to Spritz");
        return;
      }
      this.running = true;
      selection.replace(/\./, ".\u00A0");
      words = selection.split(/\s+/);
      currentWordIndex = 0;
      waiting = false;
      callback = (function(_this) {
        return function() {
          var currentWord;
          if (currentWordIndex < words.length) {
            currentWord = words[currentWordIndex];
            if (currentWord.length > 10) {
              if (!waiting) {
                _this.setWord(words[currentWordIndex]);
                return waiting = true;
              } else {
                _this.setWord(words[currentWordIndex++]);
                return waiting = false;
              }
            } else {
              return _this.setWord(words[currentWordIndex++]);
            }
          } else {
            clearInterval(intervalId);
            return _this.running = false;
          }
        };
      })(this);
      wpm = this.getWPM();
      return intervalId = setInterval(callback, 60000 / wpm);
    };

    return Spritz;

  })();

  spritz = new Spritz();

  spritz.show();

  spritz.setWord("CoffeeSpritz");

}).call(this);

//# sourceMappingURL=CoffeeSpritz.map
